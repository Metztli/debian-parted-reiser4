From 3ce1f80d1ac754543d23dfefee99b1dd0c637a42 Mon Sep 17 00:00:00 2001
From: Luca Bruno <lucab@debian.org>
Date: Fri, 28 Mar 2014 17:09:44 +0000
Subject: Initial btrfs support, only recognize it for now

Add initial btrfs support to libparted; just discovering the declared
magic entry at the right place to recognize filesystem type, for the
moment.

Origin: http://lists.alioth.debian.org/pipermail/parted-devel/2009-February/002585.html
Bug-Debian: http://bugs.debian.org/567176
Last-Update: 2014-07-07

Patch-Name: btrfs.patch
---
 libparted/fs/Makefile.am   |  1 +
 libparted/fs/btrfs/btrfs.c | 75 ++++++++++++++++++++++++++++++++++++++++++++++
 libparted/libparted.c      |  4 +++
 3 files changed, 80 insertions(+)
 create mode 100644 libparted/fs/btrfs/btrfs.c

diff --git a/libparted/fs/Makefile.am b/libparted/fs/Makefile.am
index 8d48ea1..a8fb313 100644
--- a/libparted/fs/Makefile.am
+++ b/libparted/fs/Makefile.am
@@ -25,6 +25,7 @@ libfs_la_SOURCES =		\
   amiga/asfs.c			\
   amiga/asfs.h			\
   amiga/a-interface.c		\
+  btrfs/btrfs.c			\
   ext2/ext2.h			\
   ext2/ext2_fs.h		\
   ext2/interface.c		\
diff --git a/libparted/fs/btrfs/btrfs.c b/libparted/fs/btrfs/btrfs.c
new file mode 100644
index 0000000..4d8bd6a
--- /dev/null
+++ b/libparted/fs/btrfs/btrfs.c
@@ -0,0 +1,75 @@
+/*
+    libparted - a library for manipulating disk partitions
+    Copyright (C) 2000, 2009 Free Software Foundation, Inc.
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <config.h>
+
+#include <parted/parted.h>
+#include <parted/endian.h>
+
+#if ENABLE_NLS
+#  include <libintl.h>
+#  define _(String) dgettext (PACKAGE, String)
+#else
+#  define _(String) (String)
+#endif /* ENABLE_NLS */
+
+#include <unistd.h>
+
+#define BTRFS_BLOCK_SIZES       ((int[2]){1024, 0})
+#define BTRFS_SUPER_INFO_SIZE 4096
+#define BTRFS_SUPER_INFO_OFFSET (64 * 1024)
+
+//Should be definitive, as of v0.18
+#define BTRFS_SIGNATURE	"_BHRfS_M"
+
+static PedGeometry*
+btrfs_probe (PedGeometry* geom)
+{
+	char	buf[BTRFS_SUPER_INFO_SIZE];
+
+	if (!ped_geometry_read (geom, buf, (BTRFS_SUPER_INFO_OFFSET / 512), (BTRFS_SUPER_INFO_SIZE / 512)))
+		return 0;
+
+	if (strncmp (BTRFS_SIGNATURE, buf + 64, strlen (BTRFS_SIGNATURE)) == 0)
+		return ped_geometry_new (geom->dev, geom->start, geom->length);
+	else
+		return NULL;
+}
+
+static PedFileSystemOps btrfs_ops = {
+	probe:		btrfs_probe,
+};
+
+static PedFileSystemType btrfs_type = {
+	next:	NULL,
+	ops:	&btrfs_ops,
+	name:	"btrfs",
+	block_sizes: BTRFS_BLOCK_SIZES
+};
+
+void
+ped_file_system_btrfs_init ()
+{
+	ped_file_system_type_register (&btrfs_type);
+}
+
+void
+ped_file_system_btrfs_done ()
+{
+	ped_file_system_type_unregister (&btrfs_type);
+}
diff --git a/libparted/libparted.c b/libparted/libparted.c
index a6d86f0..6b3e4f4 100644
--- a/libparted/libparted.c
+++ b/libparted/libparted.c
@@ -109,6 +109,7 @@ extern void ped_file_system_hfs_init (void);
 extern void ped_file_system_fat_init (void);
 extern void ped_file_system_ext2_init (void);
 extern void ped_file_system_nilfs2_init (void);
+extern void ped_file_system_btrfs_init (void);
 
 static void
 init_file_system_types ()
@@ -124,6 +125,7 @@ init_file_system_types ()
 	ped_file_system_fat_init ();
 	ped_file_system_ext2_init ();
 	ped_file_system_nilfs2_init ();
+	ped_file_system_btrfs_init ();
 }
 
 extern void ped_disk_aix_done ();
@@ -185,6 +187,7 @@ extern void ped_file_system_ntfs_done (void);
 extern void ped_file_system_reiserfs_done (void);
 extern void ped_file_system_ufs_done (void);
 extern void ped_file_system_xfs_done (void);
+extern void ped_file_system_btrfs_done (void);
 extern void ped_file_system_amiga_done (void);
 
 static void
@@ -200,6 +203,7 @@ done_file_system_types ()
 	ped_file_system_reiserfs_done ();
 	ped_file_system_ufs_done ();
 	ped_file_system_xfs_done ();
+	ped_file_system_btrfs_done ();
 	ped_file_system_amiga_done ();
 }
 
